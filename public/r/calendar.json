{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar",
  "type": "registry:ui",
  "title": "Calendar",
  "description": "A simple Calendar",
  "dependencies": [
    "lucide-react",
    "react-day-picker"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "./src/registry/ui/calendar.tsx",
      "content": "\"use client\"\r\n\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\"\r\nimport type * as React from \"react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  components: userComponents,\r\n  ...props\r\n}: React.ComponentProps<typeof DayPicker>) {\r\n  const defaultClassNames = {\r\n    months: \"relative flex flex-col sm:flex-row gap-4\",\r\n    month: \"w-full\",\r\n    month_caption: \"relative mx-10 mb-1 flex h-9 items-center justify-center z-20\",\r\n    caption_label: \"text-sm font-medium\",\r\n    nav: \"absolute top-0 flex w-full justify-between z-10\",\r\n    button_previous: cn(\r\n      buttonVariants({ variant: \"ghost\" }),\r\n      \"size-9 text-muted-foreground/80 hover:text-foreground p-0\",\r\n    ),\r\n    button_next: cn(buttonVariants({ variant: \"ghost\" }), \"size-9 text-muted-foreground/80 hover:text-foreground p-0\"),\r\n    weekday: \"size-9 p-0 text-xs font-medium text-muted-foreground/80\",\r\n    day_button:\r\n      \"relative flex size-9 items-center justify-center whitespace-nowrap rounded-md p-0 text-foreground group-[[data-selected]:not(.range-middle)]:[transition-property:color,background-color,border-radius,box-shadow] group-[[data-selected]:not(.range-middle)]:duration-150 group-data-disabled:pointer-events-none focus-visible:z-10 hover:not-in-data-selected:bg-accent group-data-selected:bg-primary hover:not-in-data-selected:text-foreground group-data-selected:text-primary-foreground group-data-disabled:text-foreground/30 group-data-disabled:line-through group-data-outside:text-foreground/30 group-data-selected:group-data-outside:text-primary-foreground outline-none focus-visible:ring-ring/50 focus-visible:ring-[3px] group-[.range-start:not(.range-end)]:rounded-e-none group-[.range-end:not(.range-start)]:rounded-s-none group-[.range-middle]:rounded-none group-[.range-middle]:group-data-selected:bg-accent group-[.range-middle]:group-data-selected:text-foreground\",\r\n    day: \"group size-9 px-0 py-px text-sm\",\r\n    range_start: \"range-start\",\r\n    range_end: \"range-end\",\r\n    range_middle: \"range-middle\",\r\n    today:\r\n      \"*:after:pointer-events-none *:after:absolute *:after:bottom-1 *:after:start-1/2 *:after:z-10 *:after:size-[3px] *:after:-translate-x-1/2 *:after:rounded-full *:after:bg-primary [&[data-selected]:not(.range-middle)>*]:after:bg-background [&[data-disabled]>*]:after:bg-foreground/30 *:after:transition-colors\",\r\n    outside: \"text-muted-foreground data-selected:bg-accent/50 data-selected:text-muted-foreground\",\r\n    hidden: \"invisible\",\r\n    week_number: \"size-9 p-0 text-xs font-medium text-muted-foreground/80\",\r\n  }\r\n\r\n  const mergedClassNames: typeof defaultClassNames = Object.keys(defaultClassNames).reduce(\r\n    (acc, key) => ({\r\n      ...acc,\r\n      [key]: classNames?.[key as keyof typeof classNames]\r\n        ? cn(defaultClassNames[key as keyof typeof defaultClassNames], classNames[key as keyof typeof classNames])\r\n        : defaultClassNames[key as keyof typeof defaultClassNames],\r\n    }),\r\n    {} as typeof defaultClassNames,\r\n  )\r\n\r\n  const defaultComponents = {\r\n    Chevron: (props: {\r\n      className?: string\r\n      size?: number\r\n      disabled?: boolean\r\n      orientation?: \"left\" | \"right\" | \"up\" | \"down\"\r\n    }) => {\r\n      if (props.orientation === \"left\") {\r\n        return <ChevronLeftIcon size={16} {...props} aria-hidden=\"true\" />\r\n      }\r\n      return <ChevronRightIcon size={16} {...props} aria-hidden=\"true\" />\r\n    },\r\n  }\r\n\r\n  const mergedComponents = {\r\n    ...defaultComponents,\r\n    ...userComponents,\r\n  }\r\n\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"w-fit\", className)}\r\n      classNames={mergedClassNames}\r\n      components={mergedComponents}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Calendar }\r\n\r\n",
      "type": "registry:ui"
    }
  ]
}