{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-idr",
  "type": "registry:ui",
  "title": "Input IDR",
  "description": "A simple Enhanced Input IDR",
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "path": "src/registry/ui/input-idr.tsx",
      "content": "'use client'\n\nimport type React from 'react'\nimport { useState, useEffect, type ChangeEvent } from 'react'\nimport { Input } from '@/registry/ui/input'\nimport { cn } from '@/lib/utils'\n\ntype InputIDRProps = Omit<React.ComponentProps<'input'>, 'onChange'> & {\n  onChange?: (value: number) => void\n}\n\nexport function InputIDR({ onChange, className, value, ...props }: InputIDRProps) {\n  // Track both the numeric value and the formatted display value\n  const [numericValue, setNumericValue] = useState<number>(0)\n  const [displayValue, setDisplayValue] = useState<string>('')\n\n  // Initialize with default or provided value\n  useEffect(() => {\n    if (value !== undefined) {\n      const initialValue = typeof value === 'number' ? value : 0\n      setNumericValue(initialValue)\n      setDisplayValue(formatRupiah(initialValue))\n    }\n  }, [value])\n\n  // Format a number as Rupiah\n  const formatRupiah = (value: number): string => {\n    return `Rp ${value.toLocaleString('id-ID')}`\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    // Remove all non-digit characters\n    const digitsOnly = e.target.value.replace(/\\D/g, '')\n\n    // Convert to number\n    const newNumericValue = Number.parseInt(digitsOnly) || 0\n\n    // Update the numeric value\n    setNumericValue(newNumericValue)\n\n    // Format and update the display value\n    const formattedValue = formatRupiah(newNumericValue)\n    setDisplayValue(formattedValue)\n\n    // Call the onChange callback with the numeric value\n    if (onChange) {\n      onChange(newNumericValue)\n    }\n  }\n\n  // Handle focus to show only the number\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    // When focused, show only the number without formatting\n    e.target.value = numericValue.toString()\n    e.target.select()\n  }\n\n  // Handle blur to reformat the value\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    // When blurred, reapply the formatting\n    const formattedValue = formatRupiah(numericValue)\n    e.target.value = formattedValue\n  }\n\n  return (\n    <Input\n      className={cn('w-full', className)}\n      {...props}\n      type=\"text\"\n      inputMode=\"numeric\"\n      value={displayValue}\n      onChange={handleInputChange}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n    />\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}