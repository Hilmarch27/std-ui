{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-idr",
  "type": "registry:ui",
  "title": "Input IDR",
  "description": "A simple Enhanced Input IDR",
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "path": "src/registry/ui/input-idr.tsx",
      "content": "'use client'\r\n\r\nimport type React from 'react'\r\nimport { useState, useEffect, type ChangeEvent } from 'react'\r\nimport { Input } from '@/registry/ui/input'\r\nimport { cn } from '@/lib/utils'\r\n\r\ntype InputIDRProps = Omit<React.ComponentProps<'input'>, 'onChange'> & {\r\n  onChange?: (value: number) => void\r\n}\r\n\r\nexport function InputIDR({ onChange, className, value, ...props }: InputIDRProps) {\r\n  // Track both the numeric value and the formatted display value\r\n  const [numericValue, setNumericValue] = useState<number>(0)\r\n  const [displayValue, setDisplayValue] = useState<string>('')\r\n\r\n  // Initialize with default or provided value\r\n  useEffect(() => {\r\n    if (value !== undefined) {\r\n      const initialValue = typeof value === 'number' ? value : 0\r\n      setNumericValue(initialValue)\r\n      setDisplayValue(formatRupiah(initialValue))\r\n    }\r\n  }, [value])\r\n\r\n  // Format a number as Rupiah\r\n  const formatRupiah = (value: number): string => {\r\n    return `Rp ${value.toLocaleString('id-ID')}`\r\n  }\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // Remove all non-digit characters\r\n    const digitsOnly = e.target.value.replace(/\\D/g, '')\r\n\r\n    // Convert to number\r\n    const newNumericValue = Number.parseInt(digitsOnly) || 0\r\n\r\n    // Update the numeric value\r\n    setNumericValue(newNumericValue)\r\n\r\n    // Format and update the display value\r\n    const formattedValue = formatRupiah(newNumericValue)\r\n    setDisplayValue(formattedValue)\r\n\r\n    // Call the onChange callback with the numeric value\r\n    if (onChange) {\r\n      onChange(newNumericValue)\r\n    }\r\n  }\r\n\r\n  // Handle focus to show only the number\r\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    // When focused, show only the number without formatting\r\n    e.target.value = numericValue.toString()\r\n    e.target.select()\r\n  }\r\n\r\n  // Handle blur to reformat the value\r\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    // When blurred, reapply the formatting\r\n    const formattedValue = formatRupiah(numericValue)\r\n    e.target.value = formattedValue\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      className={cn('w-full', className)}\r\n      {...props}\r\n      type=\"text\"\r\n      inputMode=\"numeric\"\r\n      value={displayValue}\r\n      onChange={handleInputChange}\r\n      onFocus={handleFocus}\r\n      onBlur={handleBlur}\r\n    />\r\n  )\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}