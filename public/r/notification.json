{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notification",
  "type": "registry:component",
  "title": "Notification",
  "description": "A simple button icon Notification",
  "registryDependencies": [
    "button",
    "badge",
    "popover"
  ],
  "files": [
    {
      "path": "src/registry/components/notif.tsx",
      "content": "'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { BellIcon } from 'lucide-react'\r\n\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\r\n\r\nconst initialNotifications = [\r\n  {\r\n    id: 1,\r\n    user: 'Chris Tompson',\r\n    action: 'requested review on',\r\n    target: 'PR #42: Feature implementation',\r\n    timestamp: '15 minutes ago',\r\n    unread: true\r\n  },\r\n  {\r\n    id: 2,\r\n    user: 'Emma Davis',\r\n    action: 'shared',\r\n    target: 'New component library',\r\n    timestamp: '45 minutes ago',\r\n    unread: true\r\n  },\r\n  {\r\n    id: 3,\r\n    user: 'James Wilson',\r\n    action: 'assigned you to',\r\n    target: 'API integration task',\r\n    timestamp: '4 hours ago',\r\n    unread: false\r\n  },\r\n  {\r\n    id: 4,\r\n    user: 'Alex Morgan',\r\n    action: 'replied to your comment in',\r\n    target: 'Authentication flow',\r\n    timestamp: '12 hours ago',\r\n    unread: false\r\n  },\r\n  {\r\n    id: 5,\r\n    user: 'Sarah Chen',\r\n    action: 'commented on',\r\n    target: 'Dashboard redesign',\r\n    timestamp: '2 days ago',\r\n    unread: false\r\n  },\r\n  {\r\n    id: 6,\r\n    user: 'Sarah Chen',\r\n    action: 'commented on',\r\n    target: 'Dashboard redesign',\r\n    timestamp: '2 days ago',\r\n    unread: false\r\n  },\r\n  {\r\n    id: 7,\r\n    user: 'Sarah Chen',\r\n    action: 'commented on',\r\n    target: 'Dashboard redesign',\r\n    timestamp: '2 days ago',\r\n    unread: false\r\n  },\r\n  {\r\n    id: 8,\r\n    user: 'Miky Derya',\r\n    action: 'mentioned you in',\r\n    target: 'Origin UI open graph image',\r\n    timestamp: '2 weeks ago',\r\n    unread: false\r\n  }\r\n]\r\n\r\nfunction Dot({ className }: { className?: string }) {\r\n  return (\r\n    <svg\r\n      width=\"6\"\r\n      height=\"6\"\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 6 6\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n      aria-hidden=\"true\"\r\n    >\r\n      <circle color=\"green\" cx=\"3\" cy=\"3\" r=\"3\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport function Notif() {\r\n  const [notifications, setNotifications] = useState(initialNotifications)\r\n  const unreadCount = notifications.filter((n) => n.unread).length\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    setNotifications(\r\n      notifications.map((notification) => ({\r\n        ...notification,\r\n        unread: false\r\n      }))\r\n    )\r\n  }\r\n\r\n  const handleNotificationClick = (id: number) => {\r\n    setNotifications(\r\n      notifications.map((notification) => (notification.id === id ? { ...notification, unread: false } : notification))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button size=\"icon\" variant=\"outline\" className=\"relative\" aria-label=\"Open notifications\">\r\n          <BellIcon size={16} aria-hidden=\"true\" />\r\n          {unreadCount > 0 && (\r\n            <Badge className=\"absolute -top-2 left-full min-w-5 -translate-x-1/2 px-1\">\r\n              {unreadCount > 99 ? '99+' : unreadCount}\r\n            </Badge>\r\n          )}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-80 max-h-[600px] p-1 overflow-hidden\">\r\n        <div className=\"sticky top-0 z-10\">\r\n          <div className=\"flex items-baseline justify-between gap-4 px-3 py-2\">\r\n            <div className=\"text-sm font-semibold\">Notifications</div>\r\n            {unreadCount > 0 && (\r\n              <button\r\n                className=\"text-xs font-medium hover:underline hover:text-green-500\"\r\n                onClick={handleMarkAllAsRead}\r\n              >\r\n                Mark all as read\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div role=\"separator\" aria-orientation=\"horizontal\" className=\"bg-border -mx-1 my-1 h-px\"></div>\r\n        </div>\r\n        <div className=\"max-h-[500px] overflow-y-auto\">\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              title={notification.unread ? 'Unread' : 'Read'}\r\n              className=\"hover:bg-accent rounded-md px-3 py-2 text-sm transition-colors\"\r\n            >\r\n              <div className=\"relative flex items-start pe-3\">\r\n                <div className=\"flex-1 space-y-1\">\r\n                  <button\r\n                    className=\"text-foreground/80 text-left after:absolute after:inset-0\"\r\n                    onClick={() => handleNotificationClick(notification.id)}\r\n                  >\r\n                    <span className=\"text-foreground font-medium hover:underline\">{notification.user}</span>{' '}\r\n                    {notification.action}{' '}\r\n                    <span className=\"text-foreground font-medium hover:underline\">{notification.target}</span>.\r\n                  </button>\r\n                  <div className=\"text-muted-foreground text-xs\">{notification.timestamp}</div>\r\n                </div>\r\n                {notification.unread && (\r\n                  <div className=\"absolute end-0 self-center\">\r\n                    <span className=\"sr-only\">Unread</span>\r\n                    <Dot />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}