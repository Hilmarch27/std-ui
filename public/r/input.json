{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input",
  "type": "registry:ui",
  "title": "Enhanced Input",
  "description": "A simple Enhanced Input",
  "registryDependencies": [
    "label"
  ],
  "files": [
    {
      "path": "src/registry/ui/input.tsx",
      "content": "import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\nimport { Label } from '@/components/ui/label'\n\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\ntype InputFloatingProps = React.ComponentProps<'input'> & {\n  label: string\n}\n\nfunction InputFloating({ label, className, ...props }: InputFloatingProps) {\n  return (\n    <div className=\"relative\">\n      <Input id={label} placeholder=\"\" className={cn('dark:bg-background peer', className)} {...props} />\n      <Label\n        htmlFor={label}\n        className={cn(\n          'rounded-t-[2px] absolute start-2 top-2 z-10 origin-[0] -translate-y-4 scale-75 transform bg-background px-2 text-sm text-primary duration-300',\n          'peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100',\n          'peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-75 peer-focus:px-2',\n          'dark:bg-background rtl:peer-focus:left-auto rtl:peer-focus:translate-x-1/4 cursor-text'\n        )}\n      >\n        {label}\n      </Label>\n    </div>\n  )\n}\n\nfunction InputNumber({ className,  ...props }: React.ComponentProps<'input'>) {\n  const [inputValue, setInputValue] = React.useState<string>('')\n\n  // Initialize with default or provided value\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      const initialValue =\n        typeof props.value === 'number'\n          ? String(props.value)\n          : typeof props.value === 'string'\n          ? props.value.replace(/\\D/g, '')\n          : ''\n      setInputValue(initialValue)\n    }\n  }, [props.value])\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // Update the input value\n    setInputValue(e.target.value.replace(/\\D/g, ''))\n    // Call the onChange callback with the event object\n    if (props.onChange) {\n      props.onChange(e)\n    }\n  }\n\n  return (\n    <Input\n      {...props}\n      type=\"text\"\n      inputMode=\"numeric\"\n      value={inputValue}\n      onChange={handleInputChange}\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className\n      )}\n    />\n  )\n}\n\nexport { Input, InputFloating, InputNumber }\n",
      "type": "registry:ui"
    }
  ]
}